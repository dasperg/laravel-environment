version: "3.4"
services:
  db:
    image: mysql:5
    container_name: db_container
#    volumes:
#      - ./var/lib/mysql/data:/var/lib/mysql
#      - ./docker/mysql.conf:/var/lib/mysql/data/mysql.conf
    environment:
#      - MYSQL_MAJOR=5.7
      - MYSQL_VERSION=5.7
      - MYSQL_DATABASE=homestead
      - MYSQL_USER=homestead
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
#      - MYSQL_ENTRYPOINT_INITDB=./mysql/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"

  web:
    image: nginx:1.13-alpine
    container_name: web_container
    depends_on:
      - php
    volumes:
      - ../:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:8080"

  php:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      target: development
      args:
        www_data_uid: 1000
        www_data_gid: 1000
    container_name: php_container
    volumes:
      - ../:/var/www/html
    ports:
      - "35729:35729"

#  redis:
#    image: redis:4.0-alpine
#    container_name: shopsys-framework-redis

#  redis-admin:
#    image: erikdubbelboer/phpredisadmin:v1.10.2
#    container_name: shopsys-framework-redis-admin
#    environment:
#      - REDIS_1_HOST=redis
#    ports:
#      - "1600:80"

#  selenium-server:
#    image: selenium/standalone-chrome:3.11
#    container_name: shopsys-framework-acceptance-tests
#    ports:
#      - "4400:4444"
#    environment:
#      - HUB_PORT_4444_TCP_ADDR=hub
#      - HUB_PORT_4444_TCP_PORT=4444

#  adminer:
#    image: adminer:4.6
#    container_name: shopsys-framework-adminer
#    ports:
#      - "1100:8080"

#  smtp-server:
#    image: namshi/smtp:latest
#    container_name: shopsys-framework-smtp-server

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.2
#    container_name: shopsys-framework-elasticsearch
#    ulimits:
#      nofile:
#        soft: 65536
#        hard: 65536
#    ports:
#      - "9200:9200"
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    environment:
#      - discovery.type=single-node

#  microservice-product-search:
#    image: shopsys/microservice-product-search:latest
#    container_name: shopsys-framework-microservice-product-search

#  microservice-product-search-export:
#    image: shopsys/microservice-product-search-export:latest
#    container_name: shopsys-framework-microservice-product-search-export

#volumes:
#  elasticsearch-data:
#    driver: local